{"ast":null,"code":"var _jsxFileName = \"/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport EventsList from '../components/EventsList';\nimport EventsRoot from './EventsRoot';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:8080/events');\n      if (!response.ok) {\n        setError('Fetching events failed.');\n        return {\n          isError: true,\n          message: \"Could not fetch events\"\n        };\n      } else {\n        const resData = await response.json();\n        setFetchedEvents(resData.events);\n        // const res = new Response(\"any data\", {status: 201})\n        // return res\n      }\n      setIsLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"qNzRHA+sE7qujjZhWBEU6UvtUuo=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","EventsRoot","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","isLoading","setIsLoading","fetchedEvents","setFetchedEvents","error","setError","fetchEvents","response","fetch","ok","isError","message","resData","json","events","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","$RefreshReg$"],"sources":["/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\nimport EventsRoot from './EventsRoot';\n\nfunction EventsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    async function fetchEvents() {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:8080/events');\n\n      if (!response.ok) {\n        setError('Fetching events failed.');\n        return {isError: true, message: \"Could not fetch events\"}\n      } else {\n        const resData = await response.json();\n        setFetchedEvents(resData.events);\n        // const res = new Response(\"any data\", {status: 201})\n        // return res\n      }\n      setIsLoading(false);\n    }\n\n    fetchEvents();\n  }, []);\n  return (\n    <>\n    <EventsRoot/>\n      <div style={{ textAlign: 'center' }}>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div>\n      {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n    </>\n  );\n}\n\nexport default EventsPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,eAAegB,WAAWA,CAAA,EAAG;MAC3BL,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChBJ,QAAQ,CAAC,yBAAyB,CAAC;QACnC,OAAO;UAACK,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAwB,CAAC;MAC3D,CAAC,MAAM;QACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACrCV,gBAAgB,CAACS,OAAO,CAACE,MAAM,CAAC;QAChC;QACA;MACF;MACAb,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAK,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACEX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXxB,OAAA;MAAKyB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAN,QAAA,GACjCf,SAAS,iBAAIL,OAAA;QAAAoB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9Bf,KAAK,iBAAIT,OAAA;QAAAoB,QAAA,EAAIX;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACL,CAACnB,SAAS,IAAIE,aAAa,iBAAIP,OAAA,CAACH,UAAU;MAACsB,MAAM,EAAEZ;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACrE,CAAC;AAEP;AAACpB,EAAA,CAlCQD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}