{"ast":null,"code":"var _jsxFileName = \"/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/pages/EditEventPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditEventPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/events/\" + id).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Could not fetch event.\");\n      }\n      return res.json();\n    }).then(data => setEvent(data.event)).catch(err => setError(err.message));\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"patch\",\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(EditEventPage, \"yIUb7W80xKq3+0GW3HP3nBzCw/U=\", false, function () {\n  return [useParams];\n});\n_c = EditEventPage;\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["useParams","useEffect","useState","EventForm","jsxDEV","_jsxDEV","EditEventPage","_s","id","event","setEvent","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","method","_c","$RefreshReg$"],"sources":["/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/pages/EditEventPage.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport EventForm from \"../components/EventForm\";\n\nfunction EditEventPage() {\n  const { id } = useParams();\n  const [event, setEvent] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/events/\" + id)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Could not fetch event.\");\n        }\n        return res.json();\n      })\n      .then((data) => setEvent(data.event))\n      .catch((err) => setError(err.message));\n  }, [id]);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!event) {\n    return <p>Loading...</p>;\n  }\n\n  return <EventForm method=\"patch\" event={event} />;\n}\n\nexport default EditEventPage;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,+BAA+B,GAAGL,EAAE,CAAC,CACxCM,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKT,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC,CAAC,CACpCW,KAAK,CAAEC,GAAG,IAAKT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACd,EAAE,CAAC,CAAC;EAER,IAAIG,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAkB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,IAAI,CAAClB,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBAAOtB,OAAA,CAACF,SAAS;IAACyB,MAAM,EAAC,OAAO;IAACnB,KAAK,EAAEA;EAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD;AAACpB,EAAA,CA1BQD,aAAa;EAAA,QACLN,SAAS;AAAA;AAAA6B,EAAA,GADjBvB,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}