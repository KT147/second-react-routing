{"ast":null,"code":"var _jsxFileName = \"/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event,\n  handleSubmit\n}) {\n  _s();\n  // const navigation = useNavigation()\n\n  // const isSubmitting = navigation.state === \"submitting\"\n  // const data = useActionData()\n\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  function onSave() {\n    async function handleSubmit(event) {\n      event.preventDefault();\n      const data = new FormData(event.target);\n      const eventData = {\n        title: data.get(\"title\"),\n        image: data.get(\"image\"),\n        date: data.get(\"date\"),\n        description: data.get(\"description\")\n      };\n      const response = await fetch(\"http://localhost:8080/events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(eventData)\n      });\n      if (!response.ok) {\n        console.log(\"Not okay\");\n      }\n      if (response.status === 422) {\n        return response;\n      }\n      if (response.ok) {\n        navigate(\"/events\");\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = EventForm;\nexport default EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","classes","jsxDEV","_jsxDEV","EventForm","method","event","handleSubmit","_s","navigate","cancelHandler","onSave","preventDefault","data","FormData","target","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","ok","console","log","status","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","rows","actions","onClick","_c","$RefreshReg$"],"sources":["/Users/atla/Desktop/GitHub/second-react-routing/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nimport classes from \"./EventForm.module.css\";\n\n\nfunction EventForm({ method, event, handleSubmit }) {\n  // const navigation = useNavigation()\n\n  // const isSubmitting = navigation.state === \"submitting\"\n  // const data = useActionData()\n\n  const navigate = useNavigate();\n\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  function onSave() {\n    async function handleSubmit(event) {\n      event.preventDefault()\n      const data = new FormData(event.target)\n      \n      const eventData ={\n        title: data.get(\"title\"),\n        image: data.get(\"image\"),\n        date: data.get(\"date\"),\n        description: data.get(\"description\")\n        \n      }\n      \n      const response=  await fetch(\"http://localhost:8080/events\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(eventData)\n      })\n      \n      if (!response.ok) {\n        console.log(\"Not okay\")\n      }\n  \n      if (response.status === 422) {\n        return response\n      }\n      \n      if (response.ok) {\n        navigate(\"/events\")\n      }\n      \n      }\n  }\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event ? event.image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event ? event.date : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event ? event.description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button  type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        <button onClick={onSave} type=\"submit\">Save</button>\n      </div>\n    </form>\n  );\n}\n\nexport default EventForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}